{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\React-udemy\\\\my-app\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport PostStatusFilter from '../post-status-filter';\nimport PostList from '../post-list';\nimport PostAddForm from '../post-add-form';\nimport './app.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppBlock = styled.div`\n    margin: 0 auto;\n    max-width: 800px;   \n`;\n_c = AppBlock;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        label: 'Going to learn React',\n        important: false,\n        like: false,\n        id: 1\n      }, {\n        label: 'That is so good',\n        important: false,\n        like: false,\n        id: 2\n      }, {\n        label: 'I need a break...',\n        important: false,\n        like: false,\n        id: 3\n      }],\n      term: '',\n      filter: 'all'\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.onFilterSelect = this.onFilterSelect;\n    this.maxId = 4;\n  }\n\n  deleteItem(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        important: !old.important\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({\n      data\n    }) => {\n      const index = data.findIndex(elem => elem.id === id);\n      const old = data[index];\n      const newItem = { ...old,\n        like: !old.like\n      };\n      const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    };\n    this.setState(({\n      data\n    }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      };\n    });\n  }\n\n  searchPost(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  filterPost(items, filter) {\n    if (filter === 'like') {\n      return items.filter(item => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  onUpdateSearch(term) {\n    this.setState({\n      term\n    });\n  }\n\n  onFilterSelect(filter) {\n    this.setState({\n      filter\n    });\n  }\n\n  render() {\n    const {\n      data,\n      term,\n      filter\n    } = this.state;\n    const liked = data.filter(item => item.like).length;\n    const allPosts = data.length;\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n    return /*#__PURE__*/_jsxDEV(AppBlock, {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n        liked: liked,\n        allPosts: allPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-panel d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(SearchPanel, {\n          onUpdateSearch: this.onUpdateSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PostStatusFilter, {\n          filter: filter,\n          onFilterSelect: this.onFilterSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: visiblePosts,\n        onDelete: this.deleteItem,\n        onToggleImportant: this.onToggleImportant,\n        onToggleLiked: this.onToggleLiked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PostAddForm, {\n        onAdd: this.addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AppBlock\");","map":{"version":3,"sources":["D:/github/React-udemy/my-app/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","PostStatusFilter","PostList","PostAddForm","styled","AppBlock","div","App","constructor","props","state","data","label","important","like","id","term","filter","deleteItem","bind","addItem","onToggleImportant","onToggleLiked","onUpdateSearch","onFilterSelect","maxId","setState","index","findIndex","elem","newArr","slice","old","newItem","body","searchPost","items","length","item","indexOf","filterPost","render","liked","allPosts","visiblePosts"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;   \r\n`;\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data : [\r\n                {label:'Going to learn React', important:false, like: false, id : 1},\r\n                {label:'That is so good', important:false, like: false, id : 2},\r\n                {label:'I need a break...', important:false, like: false, id : 3}\r\n            ],\r\n            term : '',\r\n            filter : 'all'\r\n        };  \r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect\r\n\r\n        this.maxId = 4;\r\n    }\r\n\r\n    deleteItem(id){\r\n        this.setState(({data}) =>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            \r\n            \r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data : newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id){\r\n        this.setState(({data}) =>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    onToggleLiked(id){\r\n        this.setState(({data}) =>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label:body,\r\n            important :false,\r\n            id: this.maxId++\r\n        }\r\n        this.setState(({data}) =>{\r\n            const newArr = [...data, newItem];\r\n            return{\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    searchPost(items, term){\r\n        if (term.length === 0){\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        }); \r\n    }\r\n    \r\n    filterPost(items, filter){\r\n        if(filter ==='like'){\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term){\r\n        this.setState({term})\r\n    }\r\n    onFilterSelect(filter){\r\n        this.setState({filter})\r\n    }\r\n\r\n  render(){\r\n      const {data,term, filter} =this.state;\r\n\r\n      const liked = data.filter(item => item.like).length;\r\n      const allPosts = data.length;\r\n\r\n      const visiblePosts = this.filterPost(this.searchPost(data,term),filter );\r\n\r\n      return(\r\n        <AppBlock>\r\n            <AppHeader\r\n            liked = {liked}\r\n            allPosts={allPosts}/>\r\n            <div \r\n            className = 'search-panel d-flex'>\r\n                <SearchPanel\r\n                onUpdateSearch = {this.onUpdateSearch}/>\r\n                <PostStatusFilter\r\n                filter = {filter}\r\n                onFilterSelect ={this.onFilterSelect}/>\r\n            </div>\r\n            <PostList \r\n            posts = {visiblePosts}\r\n            onDelete={this.deleteItem}\r\n            onToggleImportant = {this.onToggleImportant}\r\n            onToggleLiked = {this.onToggleLiked}/>\r\n            <PostAddForm\r\n                onAdd = {this.addItem}/>\r\n        </AppBlock>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}